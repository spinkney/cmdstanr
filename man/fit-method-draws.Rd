% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{fit-method-draws}
\alias{fit-method-draws}
\alias{draws}
\title{Extract posterior draws}
\usage{
draws(
  variables = NULL,
  inc_warmup = FALSE,
  format = getOption("cmdstanr_draws_format", "draws_matrix")
)
}
\arguments{
\item{variables}{(character vector) The variables to read in. If \code{NULL} (the
default) then all variables are included.}

\item{inc_warmup}{(logical) Should warmup draws be included? Defaults to
\code{FALSE}. Ignored except when used with \link{CmdStanMCMC} objects.}

\item{format}{(string) The format of the returned draws or point estimates.
Must be a valid format from the \pkg{posterior} package. The default can be
set using the option \code{"cmdstanr_draws_format"}, otherwise the defaults are
the following.
\itemize{
\item For sampling and generated quantities the default is
\code{\link[posterior:draws_array]{"draws_array"}}.
\item For point estimates from optimization and approximate draws from
variational inference the default is
\code{\link[posterior:draws_array]{"draws_matrix"}}.
}

To use a different format it can be specified as the full name (e.g.
\code{"draws_df"}) or omitting the \code{"draws_"} prefix (e.g. \code{"df"}).

For models with a large number of parameters (20k+) we recommend using the
\code{draws_list} format, which is the most efficient and RAM friendly when
combining draws from multiple chains. If speed or memory is not a
constraint we recommend selecting the format that most suits the coding
style of the post processing phase.}
}
\value{
Depends on the value of \code{format}. The defaults are:
\itemize{
\item For \link[=model-method-sample]{MCMC}, a 3-D
\code{\link[posterior:draws_array]{draws_array}} object (iteration x chain x
variable).
\item For standalone \link[=model-method-generate-quantities]{generated quantities}, a
3-D \code{\link[posterior:draws_array]{draws_array}} object (iteration x chain x
variable).
\item For \link[=model-method-variational]{variational inference}, a 2-D
\code{\link[posterior:draws_matrix]{draws_matrix}} object (draw x variable). An
additional variable \code{lp_approx__} is also included, which is the log density
of the variational approximation to the posterior evaluated at each of the
draws.
\item For \link[=model-method-optimize]{optimization}, a 1-row
\code{\link[posterior:draws_matrix]{draws_matrix}} with one column per variable. These
are \emph{not} actually draws, just point estimates stored in the \code{draws_matrix}
format. See \code{\link[=fit-method-mle]{$mle()}} to extract them as a numeric vector.
}
}
\description{
Extract posterior draws after MCMC or approximate posterior
draws after variational approximation using formats provided by the
\pkg{posterior} package.

The variables include the \code{parameters}, \verb{transformed parameters}, and
\verb{generated quantities} from the Stan program as well as \code{lp__}, the total
log probability (\code{target}) accumulated in the \code{model} block.
}
\examples{
\dontrun{
library(posterior)
library(bayesplot)
color_scheme_set("brightblue")

# logistic regression with intercept alpha and coefficients beta
fit <- cmdstanr_example("logistic")

# returned as 3-D array (see ?posterior::draws_array)
draws <- fit$draws()
dim(draws)
str(draws)

# can easily convert to other formats (data frame, matrix, list)
as_draws_df(draws)  # see also as_draws_matrix, as_draws_list

# or can specify 'format' argument to avoid manual conversion
draws <- fit$draws(format = "df")

# can select specific parameters
fit$draws("alpha")
fit$draws("beta")  # selects entire vector beta
fit$draws(c("alpha", "beta[2]"))

# can be passed directly to bayesplot plotting functions
mcmc_dens(fit$draws(c("alpha", "beta")))
mcmc_scatter(fit$draws(c("beta[1]", "beta[2]")), alpha = 0.3)
}

}
\seealso{
\code{\link{CmdStanMCMC}}, \code{\link{CmdStanMLE}}, \code{\link{CmdStanVB}}, \code{\link{CmdStanGQ}}
}
